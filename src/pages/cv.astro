---
import BaseLayout from "../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import profilePicture from "../assets/profile-pictures/KevinJust_18-01-183-web.jpg";
import { CVEntry } from "../types/CVEntry";
import CVEntryElement from "../components/CVEntryElement.astro";

const cvEntries: CVEntry[] = [
  {
    company: "Wildmoser electronic",
    positions: ["Intern"],
    startDate: Date.parse("01 Sep 2014 00:00:00 +01:00"),
    endDate: Date.parse("01 Feb 2015 00:00:00 +01:00"),
    description:
      "My first real job in the industry. I learned designing PCBs and how to properly program microcontrollers. The project I worked on was a capacitive sensor board that had two applications. Rain recognition and finger detection. I was told that my prototypes were the basis for actual products that made its way into our customers products.",
      skills: [
          "C",
          "Circuit design",
          "PCB design",
          "Altium",
          "MPLAB",
          "Embedded Systems",
      ],
  },
  {
    company: "Zentrale It der Hochschule MÃ¼nchen",
    positions: ["Student Worker"],
    startDate: Date.parse("01 Jun 2015 00:00:00 +01:00"),
    endDate: Date.parse("01 Sep 2016 00:00:00 +01:00"),
    description:
      'Working with the Firewall pfSense, and implementation of my bachelor thesis. "Setting up of a department capable redundant firewall with a predefined set of rules"',
    skills: ["pfSense", "Linux", "Network Security", "PHP"],
  },
  {
    company: "Magazino GmbH",
    positions: ["Working Studen"],
    startDate: Date.parse("01 Mar 2016 00:00:00 +01:00"),
    endDate: Date.parse("01 Oct 2016 00:00:00 +01:00"),
    description:
      "Error handling for CAN- and I2C-buses in C++. Development of some firmware flash and configuration scripts in python for several electric motors, only accessible through a CAN-bus.",
    skills: ["Python", "C++", "CAN", "I2C", "Embedded Systems"],
  },
  {
    company: "Roboy",
    positions: ["Lab Course", "Junior Angel", "Master Thesis"],
    startDate: Date.parse("01 Oct 2017 00:00:00 +01:00"),
    endDate: Date.parse("01 Sep 2019 00:00:00 +01:00"),
    description:
      "- Sound source localization with a uniform circular microphone array.\n" +
      "- Development of a modular microphone array with microelectronic mechanical systems microphones and a FPGA.\n" +
      "- Audio processing on a FPGA in Verilog\n" +
      "- Signal filter design in matlab\n" +
      "- Audio recording & speech to text with python and ROS \n" +
      "- Direction of arrival visualization with built-in LEDs \n" +
      "- Combination of the upper things by Developing SAM, the Roboy Speaker & Audio Manager \n" +
      "- Developing SAM for Raspberry Pis with attached Matrix Creators \n" +
      "- Junior Angel: Team lead of the famous Roboy Skill Machine team \n" +
      "- Master Thesis: Exoskeleton structure optimization using muskoskeletal actuators",
    skills: [
      "FPGA",
      "Verilog",
      "Matlab",
      "Python",
      "ROS",
      "C++",
      "Raspberry Pi",
      "Python",
      "Gazebo",
      "OpenSim",
      "Audio Processing",
    ],
  },
  {
    company: "QAware GmbH",
    positions: [
      "Working Student Softwaredevelopment",
      "Software Engineer",
      "Senior Software Engineer",
    ],
    startDate: Date.parse("01 Mar 2017 00:00:00 +01:00"),
    endDate: Date.parse("01 Aug 2022 00:00:00 +01:00"),
    description:
      "Dynamic project data analysis. This with Elasticsearch, ChronixDB, SonarQube and self created tools, written in Python and Java.\n" +
      "\n" +
      "Security-Logmonitoring with an Elastic Stack. \n" +
      "-- SE --" +
      "- Backend-Development in Java, mainly doing Maven-Projects\n" +
      "- UI-Development with Vue in Typescript\n" +
      "- Team-Lead with PowerPoint, Google Sheets, Zoom, Jira, Confluence and my appearance\n" +
      "- Semantic Search on Patents using SBERT \n" +
      "-- Senior --" +
      "- Team-Lead tasks including being the leading software architect, the project lead and the leading business architect\n" +
      "- Employee account management in Go\n" +
      "- 3D pose detection with Mediapipe in Javascript\n" +
      "- 3D pose coordinate mapping onto a 3D avatar with Three.js in Javascript",
    skills: [
      "Java",
      "Springboot",
      "Maven",
      "Elasticsearch",
      "Go",
      "Python",
      "Vue",
      "Typescript",
      "Three.js",
      "Mediapipe",
      "Computer Vision",
      "Pose Estimation",
      "Team Lead",
      "Scrum",
      "Jira",
      "Confluence",
      "Feature Specification",
    ],
  },
  {
    company: "Agile Robots SE",
    positions: ["Software Engineer", "Senior Software Engineer"],
    startDate: Date.parse("01 Sep 2022 00:00:00 +01:00"),
    endDate: Date.now(),
    description:
      "- Team Lead substitute\n" +
      "- Feature Specification\n" +
      "- Hiring\n" +
      "- Robot state visualization\n" +
      "- Robot control user interface",
    skills: [
      "Vue",
      "Typescript",
      "Three.js",
      "Vite",
      "Vitest",
      "SCSS",
      "GraphQL",
      "gRPC",
      "Linux",
      "Robotics",
      "Team Lead",
      "Hiring",
      "Feature Specification",
      "Scrum",
      "Kanban",
    ],
  },
];

/*
Thoughts, so that I don't forget them
- date next to list point
- descriptions should be written like a story instead of what they currently are
- skills on the left highlight if they are in the list of "active" skills
- when scrolling through, the current entry is a bit bigger and in the front, the other are a bit smaller and transparent (see adams list animations)
- skills on the left have indicators that show how trained I am (three dots are probably enough)
*/
---

<BaseLayout title="CV">
  <h1>Curriculum Vitae</h1>
  <p>
    I am a software developer from Munich, Germany with a diverse field of
    expertise. I currently specialize in frontend development. My strong suit
    are applications that process and visualize complex data, preferably in 3D.
  </p>
  <div class="cv-wrapper">
    <div class="cv-sidebar">
      <Image src={profilePicture} alt="Profile picture" />
    </div>
    <ul>
      {cvEntries.map((entry) => <CVEntryElement entry={entry} />)}
    </ul>
  </div>
</BaseLayout>

<style>
  .cv-wrapper {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--size-4);

    .cv-sidebar {
      display: flex;
      flex-direction: column;
      gap: var(--size-4);

      img {
        object-fit: cover;
        border-radius: 100vw;
        height: var(--size-128);
        width: auto;
        border: var(--size-4) solid var(--subtext1);
      }
    }
  }
</style>
