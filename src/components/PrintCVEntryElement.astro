---
import { type CVEntry } from "../types/CVEntry";
interface Props {
  entry: CVEntry;
  timeSpanColor: string;
  isGerman?: boolean;
  index: number
}
const { entry, timeSpanColor, isGerman = false, index } = Astro.props;

function formatDate(date: number | string) {
  return typeof date === "string"
    ? date
    : new Date(date).toLocaleDateString("en-US", {
        year: "numeric",
        month: "numeric",
      });
}

function joinEntries(positionList: string[]) {
  const numberOfPositions = positionList.length;

  if (numberOfPositions === 1) {
    return positionList[0];
  } else {
    return `${positionList.slice(0, numberOfPositions - 1).join(", ")} & ${positionList[numberOfPositions - 1]}`;
  }
}
const endDate = typeof entry.endDate === "string" ? Date.now() : entry.endDate;
const timeSpan =
  new Date(endDate).getTime() - new Date(entry.startDate).getTime();
const timeSpanInMonths = Math.floor(timeSpan / (1000 * 60 * 60 * 24 * 30));
const timeSpanInYears = Math.floor(timeSpan / (1000 * 60 * 60 * 24 * 365));
const timeSpanString =
  timeSpanInYears < 1
    ? `${timeSpanInMonths} m`
    : `${timeSpanInYears} ${isGerman ? "j" : "y"}`;

const optionalClass = index === 2 ? (isGerman ? 'extra-extra-space' : "extra-space") : "";
---

<li class={optionalClass}>
  <div class="time-indicator" style={`--time-span-color: ${timeSpanColor}`}>
    <span>{formatDate(entry.startDate)}</span>
    <div class="time-span">{timeSpanString}</div>
    <span>{formatDate(entry.endDate)}</span>
  </div>
  <div class="content">
    <h3>{joinEntries(entry.positions)} {isGerman ? 'bei' : 'at'} {entry.company}</h3>
    <p>{entry.description}</p>
    <p><strong>{entry.skills.join(", ")}</strong></p>
  </div>
</li>

<style>
  li {
    --time-span-color: var(--sapphire);
    list-style: none;
    display: grid;
    grid-template-columns: subgrid;
    grid-column: span 2;
    align-items: center;
    gap: var(--size-16);

    &.extra-space {
      margin-top: 2rem;
    }

    &.extra-extra-space {
        margin-top: 2.25rem;
    }

    .time-indicator {
      height: 100%;
      display: flex;
      flex-direction: column-reverse;
      justify-content: center;
      align-items: center;
      gap: var(--size-8);
      background-color: color-mix(
        in oklab,
        var(--time-span-color),
        transparent 90%
      );
      border-radius: var(--size-4);
      border: 2px solid var(--time-span-color);

      .time-span {
        flex: 1;
        display: flex;
        align-items: center;
        font-weight: bold;
        color: var(--time-span-color);
      }

      span {
        font-size: 0.8rem;
        color: var(--time-span-color);
        padding: var(--size-8);
      }
    }

    .content {
      h3 {
        margin: 0;
        font-size: 1.2rem;
      }

      p {
        margin-bottom: 0;
      }
    }
  }
</style>
